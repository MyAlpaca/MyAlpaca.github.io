<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>数据结构</title>
      <link href="2021/05211106.html"/>
      <url>2021/05211106.html</url>
      
        <content type="html"><![CDATA[<h1 id="一、数据结构和算法"><a href="#一、数据结构和算法" class="headerlink" title="一、数据结构和算法"></a>一、数据结构和算法</h1><h2 id="1-数据结构在学什么"><a href="#1-数据结构在学什么" class="headerlink" title="1.数据结构在学什么"></a>1.数据结构在学什么</h2><h2 id="2-数据结构的基本概念"><a href="#2-数据结构的基本概念" class="headerlink" title="2.数据结构的基本概念"></a>2.数据结构的基本概念</h2><h2 id="3-算法的基本概念"><a href="#3-算法的基本概念" class="headerlink" title="3.算法的基本概念"></a>3.算法的基本概念</h2><h2 id="4-算法的时间复杂度"><a href="#4-算法的时间复杂度" class="headerlink" title="4.算法的时间复杂度"></a>4.算法的时间复杂度</h2><h2 id="5-算法的空间复杂度"><a href="#5-算法的空间复杂度" class="headerlink" title="5.算法的空间复杂度"></a>5.算法的空间复杂度</h2><h1 id="二、线性表"><a href="#二、线性表" class="headerlink" title="二、线性表"></a>二、线性表</h1><h2 id="1-线性表的定义和基本操作-采用顺序表"><a href="#1-线性表的定义和基本操作-采用顺序表" class="headerlink" title="1.线性表的定义和基本操作(采用顺序表)"></a>1.线性表的定义和基本操作(采用顺序表)</h2><h3 id="（1）顺序表的定义"><a href="#（1）顺序表的定义" class="headerlink" title="（1）顺序表的定义"></a>（1）顺序表的定义</h3><pre class=" language-c++"><code class="language-c++">#define MaxSize 10 //定义最大长度typedef struct{    int data[MaxSize];//用静态的“数组”存放数据元素    int length;//顺序表的当前长度}SqList;</code></pre><h3 id="（2）顺序表的插入删除"><a href="#（2）顺序表的插入删除" class="headerlink" title="（2）顺序表的插入删除"></a>（2）顺序表的插入删除</h3><blockquote><p>==插入==</p></blockquote><p>ListInsert(&amp;L,i,e): 插入操作。在表L中的第i个位置上插入指定元素e</p><p><strong>注：这里的i从1开始，表示要插入到表中的位序，i的范围为[1,length+1]</strong></p><pre class=" language-c++"><code class="language-c++">bool ListInsert(SqList &L,int i,int e){    /*    元素要插入的位置不是大于第一个，或者大于表的长度+1，则不能插入。L.length+1表示尾插，可以在L.length+1的位置插入元素    */    if(i<1||i>L.length+1){        return false;    }    //表已满    if(L.length>=MaxSize){        return false;    }    /*    若要将e插入到第i个位置，首先将最后一个元素向后移动一位。前面元素依次类推，直到移动到第i个元素结束。用以下这种方式，循环结束后，j和i-1的值相等    */    for(int j = L.length;j>=i;j--){        L.data[j] = L.data[j-1];    }    //这里i对应的数组元素下标为i-1，数组下标从0开始，i从1开始    L.data[i-1] = e;    L.length++;    return true;}</code></pre><p><strong>时间复杂度：</strong> </p><p>问题规模n=L.length(表长)</p><ul><li><p>最好情况：新元素插入到表尾，不需要移动，最好时间复杂度为O(1)</p></li><li><p>最坏情况：新元素插入到表头，需要将原有的n个元素全都向后移动,最坏时间复杂度为O(n)</p></li><li><p>平均情况：假设新元素插入到任意位置的概率相同，即p=1/(n+1)。总循环次数为一个等差数列之和，即s=[n(n+1)]/2。平均循环次数为sp=n/2。即平均时间复杂度为O(n)。</p></li></ul><blockquote><p>==删除==</p></blockquote><p>ListDelete(&amp;L,i,&amp;e):删除操作。删除表L中第i个位置的元素，并用e返回删除元素的值</p><pre class=" language-c++"><code class="language-c++">bool ListDelete(SqList &L,int i,int &e){    //这里为L.length,是最后一个元素的位序（不是下标）    if(i<1||i>L.length){        return false;    }    //先将要删除的元素保存到e中    e=L.data[i-1];    //从i后面一个元素开始，依次往前移动    for(int j = i;j<L.length;j++){        L.data[j-1] = L.data[j];    }    //移动完，长度减1    L.length--;    return true;}</code></pre><p><strong>时间复杂度：</strong> </p><p>问题规模n=L.length(表长)</p><ul><li>最好情况：删除表尾元素，不需要移动，最好时间复杂度为O(1)</li><li>最坏情况：删除表头元素，需要将后续的n-1个元素全都向前移动,最坏时间复杂度为O(n)</li><li>平均情况：假设删除任意元素的概率相同，即p=1/n。总循环次数为一个等差数列之和，即s=[n(n-1)]/2。平均循环次数为sp=(n-1)/2。即平均时间复杂度为O(n)。</li></ul><h3 id="（3）顺序表的查找"><a href="#（3）顺序表的查找" class="headerlink" title="（3）顺序表的查找"></a>（3）顺序表的查找</h3><blockquote><p>==按位查找==</p></blockquote><p>GetElem(L,i)：按位查找操作。获取表L中第i个位置的元素。</p><pre class=" language-c++"><code class="language-c++">int GetElem(SqList L,int i){    //这里为L.length,是最后一个元素的位序（不是下标）    if(i<1||i>L.length){        return;    }    return L.data[i-1];}</code></pre><p><strong>时间复杂度</strong></p><p>由于顺序表为随机存取，显示，时间复杂度为O(1)。</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>MyBatis入门笔记</title>
      <link href="2021/042013208.html"/>
      <url>2021/042013208.html</url>
      
        <content type="html"><![CDATA[<h1 id="一、MyBatis简介"><a href="#一、MyBatis简介" class="headerlink" title="一、MyBatis简介"></a>一、MyBatis简介</h1><h2 id="1-学前说明"><a href="#1-学前说明" class="headerlink" title="1.学前说明"></a>1.学前说明</h2><p>学习MyBatis前，尽量先配置好以下环境和掌握的知识前景：</p><ul><li>安装好jdk环境（推荐版本jdk1.8）</li><li>安装好MySQL（推荐版本5.7或8.0）</li><li>Maven（推荐版本3.6）</li><li>集成开发工具（推荐IDEA）</li><li>掌握了JavaSE，MySQL，JDBC，Maven基础</li></ul><h2 id="2-什么是MyBatis"><a href="#2-什么是MyBatis" class="headerlink" title="2.什么是MyBatis"></a>2.什么是MyBatis</h2><ul><li>MyBatis是一款优秀的持久层框架</li><li>MyBatis是一个半自动化的ORM（Object Relationship Mapping，对象关系映射）框架，Hibernate是一个全自动的ORM框架。MyBatis可以自己编写SQL，并且优化SQL，从而提高性能，而Hibernate自动生成了SQL，不需要自己编写，从而在某些方面性能可能会降低</li><li>MyBatis封装了JDBC，避免了许多的JDBC中重复的代码</li><li>MyBatis可以使用简单的XML或注解开发，将JavaBean与数据库中的记录进行映射</li><li>MyBatis原来是Apache的一个开源项目ibatis，2010年将这个项目迁移到了google code，并且改名为MyBatis</li><li>2013年迁移到GitHub</li><li>MyBatista官方文档：<a href="http://www.mybatis.org/mybatis-3/zh/index.html" target="_blank" rel="noopener">http://www.mybatis.org/mybatis-3/zh/index.html</a></li><li>GitHub : <a href="https://github.com/mybatis/mybatis-3" target="_blank" rel="noopener">https://github.com/mybatis/mybatis-3</a></li></ul><h2 id="3-什么是持久层"><a href="#3-什么是持久层" class="headerlink" title="3.什么是持久层"></a>3.什么是持久层</h2><ul><li>顾名思义，持久层就是完成数据持久化的一层（DAO层，Data Access Object，数据访问对象）</li><li>大多数通过关系数据库来实现持久化</li></ul><h2 id="4-为什么需要使用MyBatis"><a href="#4-为什么需要使用MyBatis" class="headerlink" title="4.为什么需要使用MyBatis"></a>4.为什么需要使用MyBatis</h2><ul><li>MyBatis是一款持久层框架，封装了JDBC，意味着实现的功能还是与JDBC一样，完成数据交互持久化</li><li>使用MyBatis，可以简化程序员的编程，提高开发效率</li></ul><h3 id="（1）MyBatis的优点"><a href="#（1）MyBatis的优点" class="headerlink" title="（1）MyBatis的优点"></a>（1）MyBatis的优点</h3><ul><li>简单易学，本身就很小且简单。没有任何第三方依赖，最简单安装只要两个jar文件和配置几个SQL映射文件就可以了</li><li>灵活，MyBatis不会对应用程序或者数据库的现有设计强加任何影响。SQL写在XML里，便于统一管理和优化。通过SQL语句可以满足操作数据库的所有需求</li><li>解除SQL与程序代码的耦合，通过DAO层，将业务逻辑和数据访问逻辑分离，使系统的设计更清晰，更易于维护，更易于单元测试，提高了可维护性</li><li>提供XML标签，支持编写动态SQL</li></ul><h1 id="二、第一个MyBatis程序"><a href="#二、第一个MyBatis程序" class="headerlink" title="二、第一个MyBatis程序"></a>二、第一个MyBatis程序</h1><p>思路：搭建环境——》导入MyBatis——》编写代码——》测试</p><h2 id="1-创建数据库"><a href="#1-创建数据库" class="headerlink" title="1.创建数据库"></a>1.创建数据库</h2><p>创建一个数据库和数据库表，插入一些数据</p><pre class=" language-sql"><code class="language-sql"><span class="token keyword">CREATE</span> <span class="token keyword">DATABASE</span> <span class="token punctuation">`</span>mybatis<span class="token punctuation">`</span><span class="token punctuation">;</span><span class="token keyword">USE</span> <span class="token punctuation">`</span>mybatis<span class="token punctuation">`</span><span class="token punctuation">;</span><span class="token keyword">DROP</span> <span class="token keyword">TABLE</span> <span class="token keyword">IF</span> <span class="token keyword">EXISTS</span> <span class="token punctuation">`</span><span class="token keyword">user</span><span class="token punctuation">`</span><span class="token punctuation">;</span><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> <span class="token punctuation">`</span><span class="token keyword">user</span><span class="token punctuation">`</span> <span class="token punctuation">(</span><span class="token punctuation">`</span>id<span class="token punctuation">`</span> <span class="token keyword">int</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span><span class="token punctuation">`</span>name<span class="token punctuation">`</span> <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">30</span><span class="token punctuation">)</span> <span class="token keyword">DEFAULT</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span><span class="token punctuation">`</span>pwd<span class="token punctuation">`</span> <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">30</span><span class="token punctuation">)</span> <span class="token keyword">DEFAULT</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span><span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span> <span class="token punctuation">(</span><span class="token punctuation">`</span>id<span class="token punctuation">`</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">ENGINE</span><span class="token operator">=</span><span class="token keyword">InnoDB</span> <span class="token keyword">DEFAULT</span> <span class="token keyword">CHARSET</span><span class="token operator">=</span>utf8<span class="token punctuation">;</span><span class="token keyword">insert</span>  <span class="token keyword">into</span> <span class="token punctuation">`</span><span class="token keyword">user</span><span class="token punctuation">`</span><span class="token punctuation">(</span><span class="token punctuation">`</span>id<span class="token punctuation">`</span><span class="token punctuation">,</span><span class="token punctuation">`</span>name<span class="token punctuation">`</span><span class="token punctuation">,</span><span class="token punctuation">`</span>pwd<span class="token punctuation">`</span><span class="token punctuation">)</span> <span class="token keyword">values</span> <span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token string">'爸爸'</span><span class="token punctuation">,</span><span class="token string">'123456'</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token string">'张三'</span><span class="token punctuation">,</span><span class="token string">'abcdef'</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token string">'李四'</span><span class="token punctuation">,</span><span class="token string">'987654'</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><h2 id="2-导入依赖"><a href="#2-导入依赖" class="headerlink" title="2.导入依赖"></a>2.导入依赖</h2><p>使用Maven导入MyBatis和数据库依赖，可以去Maven仓库查找（<a href="https://mvnrepository.com/）" target="_blank" rel="noopener">https://mvnrepository.com/）</a></p><pre class=" language-java"><code class="language-java"><span class="token operator">&lt;</span>dependency<span class="token operator">></span>   <span class="token operator">&lt;</span>groupId<span class="token operator">></span>org<span class="token punctuation">.</span>mybatis<span class="token operator">&lt;</span><span class="token operator">/</span>groupId<span class="token operator">></span>   <span class="token operator">&lt;</span>artifactId<span class="token operator">></span>mybatis<span class="token operator">&lt;</span><span class="token operator">/</span>artifactId<span class="token operator">></span>   <span class="token operator">&lt;</span>version<span class="token operator">></span><span class="token number">3.5</span><span class="token punctuation">.</span><span class="token number">2</span><span class="token operator">&lt;</span><span class="token operator">/</span>version<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>dependency<span class="token operator">></span><span class="token operator">&lt;</span>dependency<span class="token operator">></span>   <span class="token operator">&lt;</span>groupId<span class="token operator">></span>mysql<span class="token operator">&lt;</span><span class="token operator">/</span>groupId<span class="token operator">></span>   <span class="token operator">&lt;</span>artifactId<span class="token operator">></span>mysql<span class="token operator">-</span>connector<span class="token operator">-</span>java<span class="token operator">&lt;</span><span class="token operator">/</span>artifactId<span class="token operator">></span>   <span class="token operator">&lt;</span>version<span class="token operator">></span><span class="token number">5.1</span><span class="token punctuation">.</span><span class="token number">47</span><span class="token operator">&lt;</span><span class="token operator">/</span>version<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>dependency<span class="token operator">></span></code></pre><h2 id="3-配置MyBatis核心文件"><a href="#3-配置MyBatis核心文件" class="headerlink" title="3.配置MyBatis核心文件"></a>3.配置MyBatis核心文件</h2><p>可以参考MyBatis帮助文档</p><pre class=" language-xml"><code class="language-xml"><span class="token prolog">&lt;?xml version="1.0" encoding="UTF-8" ?></span><span class="token doctype">&lt;!DOCTYPE configuration       PUBLIC "-//mybatis.org//DTD Config 3.0//EN"       "http://mybatis.org/dtd/mybatis-3-config.dtd"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>configuration</span><span class="token punctuation">></span></span>   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>environments</span> <span class="token attr-name">default</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>development<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>       <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>environment</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>development<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>           <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>transactionManager</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>JDBC<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>           <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dataSource</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>POOLED<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>               <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>driver<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>com.mysql.jdbc.Driver<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>               <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>url<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>jdbc:mysql://localhost:3306/mybatis?useSSL<span class="token punctuation">=</span>true&amp;amp;useUnicode<span class="token punctuation">=</span>true&amp;amp;characterEncoding<span class="token punctuation">=</span>utf8<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>               <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>username<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>root<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>               <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>password<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>000223<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>           <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dataSource</span><span class="token punctuation">></span></span>       <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>environment</span><span class="token punctuation">></span></span>   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>environments</span><span class="token punctuation">></span></span>   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>mappers</span><span class="token punctuation">></span></span>       <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>mapper</span> <span class="token attr-name">resource</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>io/github/myalpaca/dao/userMapper.xml<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>mappers</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>configuration</span><span class="token punctuation">></span></span><span class="token comment" spellcheck="true">&lt;!--transactionManager：事务处理器，默认JDBCdataSource：数据池，POOLED开启--></span></code></pre><h2 id="4-编写MyBatis工具类"><a href="#4-编写MyBatis工具类" class="headerlink" title="4.编写MyBatis工具类"></a>4.编写MyBatis工具类</h2><p>参考MyBatis帮助文档</p><pre class=" language-java"><code class="language-java"><span class="token keyword">import</span> org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>ibatis<span class="token punctuation">.</span>io<span class="token punctuation">.</span>Resources<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>ibatis<span class="token punctuation">.</span>session<span class="token punctuation">.</span>SqlSession<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>ibatis<span class="token punctuation">.</span>session<span class="token punctuation">.</span>SqlSessionFactory<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>ibatis<span class="token punctuation">.</span>session<span class="token punctuation">.</span>SqlSessionFactoryBuilder<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>io<span class="token punctuation">.</span>IOException<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>io<span class="token punctuation">.</span>InputStream<span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MybatisUtils</span> <span class="token punctuation">{</span>   <span class="token keyword">private</span> <span class="token keyword">static</span> SqlSessionFactory sqlSessionFactory<span class="token punctuation">;</span>   <span class="token keyword">static</span> <span class="token punctuation">{</span>       <span class="token keyword">try</span> <span class="token punctuation">{</span>           String resource <span class="token operator">=</span> <span class="token string">"mybatis-config.xml"</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//MyBatis核心配置文件</span>           InputStream inputStream <span class="token operator">=</span> Resources<span class="token punctuation">.</span><span class="token function">getResourceAsStream</span><span class="token punctuation">(</span>resource<span class="token punctuation">)</span><span class="token punctuation">;</span>           sqlSessionFactory <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SqlSessionFactoryBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span>inputStream<span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IOException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>           e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token punctuation">}</span>  <span class="token punctuation">}</span>   <span class="token comment" spellcheck="true">//获取SqlSession连接</span>   <span class="token keyword">public</span> <span class="token keyword">static</span> SqlSession <span class="token function">getSession</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>       <span class="token keyword">return</span> sqlSessionFactory<span class="token punctuation">.</span><span class="token function">openSession</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><h2 id="5-创建JavaBean实体类"><a href="#5-创建JavaBean实体类" class="headerlink" title="5.创建JavaBean实体类"></a>5.创建JavaBean实体类</h2><pre class=" language-java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">User</span><span class="token punctuation">{</span>    <span class="token keyword">private</span> <span class="token keyword">int</span> id<span class="token punctuation">;</span>    <span class="token keyword">private</span> String name<span class="token punctuation">;</span>    <span class="token keyword">private</span> String pwd<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//无参构造方法，set/get方法,toString方法</span><span class="token punctuation">}</span></code></pre><h2 id="6-编写Mapper接口"><a href="#6-编写Mapper接口" class="headerlink" title="6.编写Mapper接口"></a>6.编写Mapper接口</h2><pre class=" language-java"><code class="language-java"><span class="token keyword">import</span> io<span class="token punctuation">.</span>github<span class="token punctuation">.</span>myalpaca<span class="token punctuation">.</span>pojo<span class="token punctuation">.</span>User<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>List<span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">UserMapper</span><span class="token punctuation">{</span>    List<span class="token operator">&lt;</span>User<span class="token operator">></span> <span class="token function">selectUser</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><h2 id="7-编写Mapper-xml配置文件"><a href="#7-编写Mapper-xml配置文件" class="headerlink" title="7.编写Mapper.xml配置文件"></a>7.编写Mapper.xml配置文件</h2><p><strong>namespace：编写全限定类名</strong></p><pre class=" language-xml"><code class="language-xml"><span class="token prolog">&lt;?xml version="1.0" encoding="UTF-8" ?></span><span class="token doctype">&lt;!DOCTYPE mapper       PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"       "http://mybatis.org/dtd/mybatis-3-mapper.dtd"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>mapper</span> <span class="token attr-name">namespace</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>io.github.myalpaca.dao.UserMapper<span class="token punctuation">"</span></span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>select</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>selectUser<span class="token punctuation">"</span></span> <span class="token attr-name">resultType</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>io.github.myalpaca.pojo.User<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  select * from user <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>select</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>mapper</span><span class="token punctuation">></span></span></code></pre><h2 id="8-编写测试类"><a href="#8-编写测试类" class="headerlink" title="8.编写测试类"></a>8.编写测试类</h2><p>使用Junit测试</p><pre class=" language-java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MyTest</span> <span class="token punctuation">{</span>   <span class="token annotation punctuation">@Test</span>   <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">selectUser</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>       SqlSession session <span class="token operator">=</span> MybatisUtils<span class="token punctuation">.</span><span class="token function">getSession</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>       <span class="token comment" spellcheck="true">//方法一:</span>       <span class="token comment" spellcheck="true">//List&lt;User> users = session.selectList("com.kuang.mapper.UserMapper.selectUser");</span>       <span class="token comment" spellcheck="true">//方法二:</span>       UserMapper mapper <span class="token operator">=</span> session<span class="token punctuation">.</span><span class="token function">getMapper</span><span class="token punctuation">(</span>UserMapper<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>       List<span class="token operator">&lt;</span>User<span class="token operator">></span> users <span class="token operator">=</span> mapper<span class="token punctuation">.</span><span class="token function">selectUser</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>       <span class="token keyword">for</span> <span class="token punctuation">(</span>User user<span class="token operator">:</span> users<span class="token punctuation">)</span><span class="token punctuation">{</span>           System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>user<span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token punctuation">}</span>       session<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><h2 id="9-解决Maven静态资源过滤问题"><a href="#9-解决Maven静态资源过滤问题" class="headerlink" title="9.解决Maven静态资源过滤问题"></a>9.解决Maven静态资源过滤问题</h2><pre class=" language-xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>resources</span><span class="token punctuation">></span></span>   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>resource</span><span class="token punctuation">></span></span>       <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>directory</span><span class="token punctuation">></span></span>src/main/java<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>directory</span><span class="token punctuation">></span></span>       <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>includes</span><span class="token punctuation">></span></span>           <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>include</span><span class="token punctuation">></span></span>**/*.properties<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>include</span><span class="token punctuation">></span></span>           <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>include</span><span class="token punctuation">></span></span>**/*.xml<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>include</span><span class="token punctuation">></span></span>       <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>includes</span><span class="token punctuation">></span></span>       <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>filtering</span><span class="token punctuation">></span></span>false<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>filtering</span><span class="token punctuation">></span></span>   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>resource</span><span class="token punctuation">></span></span>   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>resource</span><span class="token punctuation">></span></span>       <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>directory</span><span class="token punctuation">></span></span>src/main/resources<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>directory</span><span class="token punctuation">></span></span>       <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>includes</span><span class="token punctuation">></span></span>           <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>include</span><span class="token punctuation">></span></span>**/*.properties<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>include</span><span class="token punctuation">></span></span>           <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>include</span><span class="token punctuation">></span></span>**/*.xml<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>include</span><span class="token punctuation">></span></span>       <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>includes</span><span class="token punctuation">></span></span>       <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>filtering</span><span class="token punctuation">></span></span>false<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>filtering</span><span class="token punctuation">></span></span>   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>resource</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>resources</span><span class="token punctuation">></span></span></code></pre><h1 id="三、CRUD（配置文件）"><a href="#三、CRUD（配置文件）" class="headerlink" title="三、CRUD（配置文件）"></a>三、CRUD（配置文件）</h1><h2 id="1-根据id查询用户"><a href="#1-根据id查询用户" class="headerlink" title="1.根据id查询用户"></a>1.根据id查询用户</h2><h3 id="1-添加方法"><a href="#1-添加方法" class="headerlink" title="(1)添加方法"></a>(1)添加方法</h3><pre class=" language-java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">UserMapper</span> <span class="token punctuation">{</span>   <span class="token comment" spellcheck="true">//查询全部用户</span>   List<span class="token operator">&lt;</span>User<span class="token operator">></span> <span class="token function">selectUser</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token comment" spellcheck="true">//根据id查询用户</span>   User <span class="token function">selectUserById</span><span class="token punctuation">(</span><span class="token keyword">int</span> id<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><h3 id="2-在xml映射文件中添加Select"><a href="#2-在xml映射文件中添加Select" class="headerlink" title="(2)在xml映射文件中添加Select"></a>(2)在xml映射文件中添加Select</h3><pre class=" language-xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>select</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>selectUserById<span class="token punctuation">"</span></span> <span class="token attr-name">resultType</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>io.github.myalpaca.pojo.User<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>select * from user where id = #{id}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>select</span><span class="token punctuation">></span></span></code></pre><h3 id="3-测试"><a href="#3-测试" class="headerlink" title="(3)测试"></a>(3)测试</h3><pre class=" language-java"><code class="language-java"><span class="token annotation punctuation">@Test</span><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">tsetSelectUserById</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>   SqlSession session <span class="token operator">=</span> MybatisUtils<span class="token punctuation">.</span><span class="token function">getSession</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">//获取SqlSession连接</span>   UserMapper mapper <span class="token operator">=</span> session<span class="token punctuation">.</span><span class="token function">getMapper</span><span class="token punctuation">(</span>UserMapper<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   User user <span class="token operator">=</span> mapper<span class="token punctuation">.</span><span class="token function">selectUserById</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>user<span class="token punctuation">)</span><span class="token punctuation">;</span>   session<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><h2 id="2-根据密码和名字查询用户"><a href="#2-根据密码和名字查询用户" class="headerlink" title="2.根据密码和名字查询用户"></a>2.根据密码和名字查询用户</h2><h3 id="1-方法一：直接在方法中传递参数"><a href="#1-方法一：直接在方法中传递参数" class="headerlink" title="(1)方法一：直接在方法中传递参数"></a>(1)方法一：直接在方法中传递参数</h3><ul><li>在接口方法的参数前加@Param注解</li><li>Sql语句编写的时候，直接取@Param中设置的值即可，不需要单独设置参数类型</li></ul><pre class=" language-java"><code class="language-java"><span class="token comment" spellcheck="true">//通过密码和名字查询用户</span>User <span class="token function">selectUserByNP</span><span class="token punctuation">(</span><span class="token annotation punctuation">@Param</span><span class="token punctuation">(</span><span class="token string">"username"</span><span class="token punctuation">)</span> String username<span class="token punctuation">,</span><span class="token annotation punctuation">@Param</span><span class="token punctuation">(</span><span class="token string">"pwd"</span><span class="token punctuation">)</span> String pwd<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">/*   &lt;select id="selectUserByNP" resultType="io.github.myalpaca.pojo.User">     select * from user where name = #{username} and pwd = #{pwd}   &lt;/select>*/</span></code></pre><h3 id="2-方法二：使用Map"><a href="#2-方法二：使用Map" class="headerlink" title="(2)方法二：使用Map"></a>(2)方法二：使用Map</h3><p>==<strong>据说不正规</strong>==</p><ul><li><p>在接口方法中，参数直接传递Map；</p><pre class=" language-java"><code class="language-java">User <span class="token function">selectUserByNP2</span><span class="token punctuation">(</span>Map<span class="token operator">&lt;</span>String<span class="token punctuation">,</span>Object<span class="token operator">></span> map<span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre></li><li><p>编写sql语句的时候，需要传递参数类型，参数类型为map</p><pre class=" language-java"><code class="language-java"><span class="token operator">&lt;</span>select id<span class="token operator">=</span><span class="token string">"selectUserByNP2"</span> parameterType<span class="token operator">=</span><span class="token string">"map"</span> resultType<span class="token operator">=</span><span class="token string">"io.github.myalpaca.pojo.User"</span><span class="token operator">></span>select <span class="token operator">*</span> from user where name <span class="token operator">=</span> #<span class="token punctuation">{</span>username<span class="token punctuation">}</span> and pwd <span class="token operator">=</span> #<span class="token punctuation">{</span>pwd<span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>select<span class="token operator">></span></code></pre></li><li><p>在使用方法的时候，Map的 key 为 sql中取的值即可，没有顺序要求！</p><pre class=" language-java"><code class="language-java">Map<span class="token operator">&lt;</span>String<span class="token punctuation">,</span> Object<span class="token operator">></span> map <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token operator">&lt;</span>String<span class="token punctuation">,</span> Object<span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>map<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"username"</span><span class="token punctuation">,</span><span class="token string">"小明"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>map<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"pwd"</span><span class="token punctuation">,</span><span class="token string">"123456"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>User user <span class="token operator">=</span> mapper<span class="token punctuation">.</span><span class="token function">selectUserByNP2</span><span class="token punctuation">(</span>map<span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre></li></ul><p><strong>总结：如果参数过多，我们可以考虑直接使用Map实现，如果参数比较少，直接传递参数即可</strong></p><h2 id="3-给数据库增加一个用户"><a href="#3-给数据库增加一个用户" class="headerlink" title="3.给数据库增加一个用户"></a>3.给数据库增加一个用户</h2><h3 id="1-在UserMapper接口中添加对应的方法"><a href="#1-在UserMapper接口中添加对应的方法" class="headerlink" title="(1)在UserMapper接口中添加对应的方法"></a>(1)在UserMapper接口中添加对应的方法</h3><pre class=" language-java"><code class="language-java"><span class="token comment" spellcheck="true">//添加一个用户</span><span class="token keyword">int</span> <span class="token function">addUser</span><span class="token punctuation">(</span>User user<span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><h3 id="2-在UserMapper-xml中添加insert语句"><a href="#2-在UserMapper-xml中添加insert语句" class="headerlink" title="(2)在UserMapper.xml中添加insert语句"></a>(2)在UserMapper.xml中添加insert语句</h3><pre class=" language-xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>insert</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>addUser<span class="token punctuation">"</span></span> <span class="token attr-name">parameterType</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>io.github.myalpaca.pojo.User<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    insert into user (id,name,pwd) values (#{id},#{name},#{pwd})<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>insert</span><span class="token punctuation">></span></span></code></pre><h3 id="3-测试-1"><a href="#3-测试-1" class="headerlink" title="(3)测试"></a>(3)测试</h3><pre class=" language-java"><code class="language-java"><span class="token annotation punctuation">@Test</span><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">testAddUser</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>   SqlSession session <span class="token operator">=</span> MybatisUtils<span class="token punctuation">.</span><span class="token function">getSession</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   UserMapper mapper <span class="token operator">=</span> session<span class="token punctuation">.</span><span class="token function">getMapper</span><span class="token punctuation">(</span>UserMapper<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   User user <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">User</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token string">"王五"</span><span class="token punctuation">,</span><span class="token string">"zxcvbn"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token keyword">int</span> i <span class="token operator">=</span> mapper<span class="token punctuation">.</span><span class="token function">addUser</span><span class="token punctuation">(</span>user<span class="token punctuation">)</span><span class="token punctuation">;</span>   System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>   session<span class="token punctuation">.</span><span class="token function">commit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//提交事务,重点!不写的话不会提交到数据库</span>   session<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><p><strong>注意点：增、删、改操作需要提交事务！</strong></p><h2 id="4-修改用户的信息"><a href="#4-修改用户的信息" class="headerlink" title="4.修改用户的信息**"></a>4.修改用户的信息**</h2><h3 id="1-编写接口方法"><a href="#1-编写接口方法" class="headerlink" title="(1)编写接口方法"></a>(1)编写接口方法</h3><pre class=" language-java"><code class="language-java"><span class="token comment" spellcheck="true">//修改一个用户</span><span class="token keyword">int</span> <span class="token function">updateUser</span><span class="token punctuation">(</span>User user<span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><h3 id="2-编写对应的配置文件SQL"><a href="#2-编写对应的配置文件SQL" class="headerlink" title="(2)编写对应的配置文件SQL"></a>(2)编写对应的配置文件SQL</h3><pre class=" language-xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>update</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>updateUser<span class="token punctuation">"</span></span> <span class="token attr-name">parameterType</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>io.github.myalpca.pojo.User<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  update user set name=#{name},pwd=#{pwd} where id = #{id}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>update</span><span class="token punctuation">></span></span></code></pre><h3 id="3-测试-2"><a href="#3-测试-2" class="headerlink" title="(3)测试"></a>(3)测试</h3><pre class=" language-java"><code class="language-java"><span class="token annotation punctuation">@Test</span><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">testUpdateUser</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>   SqlSession session <span class="token operator">=</span> MybatisUtils<span class="token punctuation">.</span><span class="token function">getSession</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   UserMapper mapper <span class="token operator">=</span> session<span class="token punctuation">.</span><span class="token function">getMapper</span><span class="token punctuation">(</span>UserMapper<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   User user <span class="token operator">=</span> mapper<span class="token punctuation">.</span><span class="token function">selectUserById</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   user<span class="token punctuation">.</span><span class="token function">setPwd</span><span class="token punctuation">(</span><span class="token string">"asdfgh"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token keyword">int</span> i <span class="token operator">=</span> mapper<span class="token punctuation">.</span><span class="token function">updateUser</span><span class="token punctuation">(</span>user<span class="token punctuation">)</span><span class="token punctuation">;</span>   System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>   session<span class="token punctuation">.</span><span class="token function">commit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//提交事务,重点!不写的话不会提交到数据库</span>   session<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><h2 id="5-根据id删除一个用户"><a href="#5-根据id删除一个用户" class="headerlink" title="5.根据id删除一个用户"></a>5.根据id删除一个用户</h2><h3 id="1-编写接口方法-1"><a href="#1-编写接口方法-1" class="headerlink" title="(1)编写接口方法"></a>(1)编写接口方法</h3><pre class=" language-java"><code class="language-java"><span class="token comment" spellcheck="true">//根据id删除用户</span><span class="token keyword">int</span> <span class="token function">deleteUser</span><span class="token punctuation">(</span><span class="token keyword">int</span> id<span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><h3 id="2-编写对应的配置文件SQL-1"><a href="#2-编写对应的配置文件SQL-1" class="headerlink" title="(2)编写对应的配置文件SQL"></a>(2)编写对应的配置文件SQL</h3><pre class=" language-xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>delete</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>deleteUser<span class="token punctuation">"</span></span> <span class="token attr-name">parameterType</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>int<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  delete from user where id = #{id}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>delete</span><span class="token punctuation">></span></span></code></pre><h3 id="3-测试-3"><a href="#3-测试-3" class="headerlink" title="(3)测试"></a>(3)测试</h3><pre class=" language-java"><code class="language-java"><span class="token annotation punctuation">@Test</span><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">testDeleteUser</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>   SqlSession session <span class="token operator">=</span> MybatisUtils<span class="token punctuation">.</span><span class="token function">getSession</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   UserMapper mapper <span class="token operator">=</span> session<span class="token punctuation">.</span><span class="token function">getMapper</span><span class="token punctuation">(</span>UserMapper<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token keyword">int</span> i <span class="token operator">=</span> mapper<span class="token punctuation">.</span><span class="token function">deleteUser</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>   session<span class="token punctuation">.</span><span class="token function">commit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//提交事务,重点!不写的话不会提交到数据库</span>   session<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><h2 id="6-小结"><a href="#6-小结" class="headerlink" title="6.小结"></a>6.小结</h2><ul><li>所有的增删改操作都需要提交事务！</li><li>接口所有的普通参数，尽量都写上@Param参数，尤其是多个参数时，必须写上！</li><li>有时候根据业务的需求，可以考虑使用map传递参数！</li><li>为了规范操作，在SQL的配置文件中，我们尽量将Parameter参数和resultType都写上！</li></ul><h2 id="7-模糊查询（like）"><a href="#7-模糊查询（like）" class="headerlink" title="7.模糊查询（like）"></a>7.模糊查询（like）</h2><h3 id="1-java中配置通配符"><a href="#1-java中配置通配符" class="headerlink" title="(1)java中配置通配符"></a>(1)java中配置通配符</h3><p>在java代码中添加sql通配符</p><pre class=" language-java"><code class="language-java">String wildcardname <span class="token operator">=</span> <span class="token string">"%smi%"</span><span class="token punctuation">;</span>List<span class="token operator">&lt;</span>name<span class="token operator">></span> names <span class="token operator">=</span> mapper<span class="token punctuation">.</span><span class="token function">selectlike</span><span class="token punctuation">(</span>wildcardname<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token operator">&lt;</span>select id<span class="token operator">=</span><span class="token string">"selectlike"</span><span class="token operator">></span>  select <span class="token operator">*</span> from foo where bar like #<span class="token punctuation">{</span>value<span class="token punctuation">}</span>  <span class="token operator">&lt;</span><span class="token operator">/</span>select<span class="token operator">></span> </code></pre><h3 id="2-sql中拼接通配符"><a href="#2-sql中拼接通配符" class="headerlink" title="(2)sql中拼接通配符"></a>(2)sql中拼接通配符</h3><p>在sql语句中拼接通配符，会引起sql注入</p><pre class=" language-java"><code class="language-java">String wildcardname <span class="token operator">=</span> <span class="token string">"smi"</span><span class="token punctuation">;</span>List<span class="token operator">&lt;</span>name<span class="token operator">></span> names <span class="token operator">=</span> mapper<span class="token punctuation">.</span><span class="token function">selectlike</span><span class="token punctuation">(</span>wildcardname<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token operator">&lt;</span>select id<span class="token operator">=</span><span class="token string">"selectlike"</span><span class="token operator">></span>    select <span class="token operator">*</span> from foo where bar like <span class="token string">"%"</span>#<span class="token punctuation">{</span>value<span class="token punctuation">}</span><span class="token string">"%"</span><span class="token operator">&lt;</span><span class="token operator">/</span>select<span class="token operator">></span></code></pre><h1 id="四、配置解析"><a href="#四、配置解析" class="headerlink" title="四、配置解析"></a>四、配置解析</h1><h2 id="1-核心配置文件"><a href="#1-核心配置文件" class="headerlink" title="1.核心配置文件"></a>1.核心配置文件</h2><ul><li><p>mybatis-config.xml系统核心配置文件</p></li><li><p>配置标签如下：</p><pre class=" language-xml"><code class="language-xml"><span class="token comment" spellcheck="true">&lt;!--配置--></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>configuration</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>configuration</span><span class="token punctuation">></span></span><span class="token comment" spellcheck="true">&lt;!--属性--></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>properties</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>properties</span><span class="token punctuation">></span></span><span class="token comment" spellcheck="true">&lt;!--设置--></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>settings</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>settings</span><span class="token punctuation">></span></span><span class="token comment" spellcheck="true">&lt;!--类型别名--></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>typeAliases</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>typeAliases</span><span class="token punctuation">></span></span><span class="token comment" spellcheck="true">&lt;!--类型处理器--></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>typeHandlers</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>typeHandlers</span><span class="token punctuation">></span></span>objectFactory（对象工厂）plugins（插件）environments（环境配置）environment（环境变量）transactionManager（事务管理器）dataSource（数据源）databaseIdProvider（数据库厂商标识）mappers（映射器）<span class="token comment" spellcheck="true">&lt;!-- 注意元素节点的顺序！顺序不对会报错 --></span></code></pre></li></ul><h2 id="2-environments元素"><a href="#2-environments元素" class="headerlink" title="2.environments元素"></a>2.environments元素</h2><pre class=" language-xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>environments</span> <span class="token attr-name">default</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>development<span class="token punctuation">"</span></span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>environment</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>development<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>transactionManager</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>JDBC<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>...<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>...<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>transactionManager</span><span class="token punctuation">></span></span>   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dataSource</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>POOLED<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>driver<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>${driver}<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>url<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>${url}<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>username<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>${username}<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>password<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>${password}<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dataSource</span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>environment</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>environments</span><span class="token punctuation">></span></span></code></pre><ul><li><p>配置MyBatis的多套运行环境，将SQL映射到多个不同的数据库上，必须指定其中一个为默认运行环境（通过default指定）</p></li><li><p>子元素节点：<strong>environment</strong></p></li><li><ul><li><p>dataSource 元素使用标准的 JDBC 数据源接口来配置 JDBC 连接对象的资源。</p></li><li><p>数据源是必须配置的。</p></li><li><p>有三种内建的数据源类型</p><pre class=" language-xml"><code class="language-xml">type="[UNPOOLED|POOLED|JNDI]"</code></pre></li><li><p>unpooled：这个数据源的实现只是每次被请求时打开和关闭连接。</p></li><li><p><strong>pooled</strong>：这种数据源的实现利用“池”的概念将 JDBC 连接对象组织起来 , 这是一种使得并发 Web 应用快速响应请求的流行处理方式。</p></li><li><p>jndi：这个数据源的实现是为了能在如 Spring 或应用服务器这类容器中使用，容器可以集中或在外部配置数据源，然后放置一个 JNDI 上下文的引用。</p></li><li><p>数据源也有很多第三方的实现，比如dbcp，c3p0，druid等等….</p></li></ul></li></ul><ul><li><p>详情：点击查看官方文档</p></li><li><p>这两种事务管理器类型都不需要设置任何属性。</p></li><li><p>具体的一套环境，通过设置id进行区别，id保证唯一！</p></li><li><p>子元素节点：transactionManager - [ 事务管理器 ]</p><pre class=" language-xml"><code class="language-xml"><span class="token comment" spellcheck="true">&lt;!-- 语法 --></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>transactionManager</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>[ JDBC | MANAGED ]<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span></code></pre></li><li><p>子元素节点：<strong>数据源（dataSource）</strong></p></li></ul><h2 id="3-mappers"><a href="#3-mappers" class="headerlink" title="3.mappers"></a>3.mappers</h2><ul><li>映射器 : 定义映射SQL语句文件</li><li>既然 MyBatis 的行为其他元素已经配置完了，我们现在就要定义 SQL 映射语句了。但是首先我们需要告诉 MyBatis 到哪里去找到这些语句。Java 在自动查找这方面没有提供一个很好的方法，所以最佳的方式是告诉 MyBatis 到哪里去找映射文件。你可以使用相对于类路径的资源引用， 或完全限定资源定位符（包括 <code>file:///</code> 的 URL），或类名和包名等。映射器是MyBatis中最核心的组件之一，在MyBatis 3之前，只支持xml映射器，即：所有的SQL语句都必须在xml文件中配置。而从MyBatis 3开始，还支持接口映射器，这种映射器方式允许以Java代码的方式注解定义SQL语句，非常简洁。</li></ul><p><strong>引入资源方式</strong></p><pre class=" language-xml"><code class="language-xml"><span class="token comment" spellcheck="true">&lt;!-- 使用相对于类路径的资源引用 --></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>mappers</span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>mapper</span> <span class="token attr-name">resource</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>org/mybatis/builder/PostMapper.xml<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>mappers</span><span class="token punctuation">></span></span><span class="token comment" spellcheck="true">&lt;!-- 使用完全限定资源定位符（URL） --></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>mappers</span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>mapper</span> <span class="token attr-name">url</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>file:///var/mappers/AuthorMapper.xml<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>mappers</span><span class="token punctuation">></span></span><span class="token comment" spellcheck="true">&lt;!--使用映射器接口实现类的完全限定类名需要配置文件名称和接口名称一致，并且位于同一目录下--></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>mappers</span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>mapper</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>org.mybatis.builder.AuthorMapper<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>mappers</span><span class="token punctuation">></span></span><span class="token comment" spellcheck="true">&lt;!--将包内的映射器接口实现全部注册为映射器但是需要配置文件名称和接口名称一致，并且位于同一目录下--></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>mappers</span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>package</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>org.mybatis.builder<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>mappers</span><span class="token punctuation">></span></span></code></pre><p><strong>Mapper文件</strong></p><pre class=" language-xml"><code class="language-xml"><span class="token prolog">&lt;?xml version="1.0" encoding="UTF-8" ?></span><span class="token doctype">&lt;!DOCTYPE mapper       PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"       "http://mybatis.org/dtd/mybatis-3-mapper.dtd"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>mapper</span> <span class="token attr-name">namespace</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>com.kuang.mapper.UserMapper<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>mapper</span><span class="token punctuation">></span></span></code></pre><ul><li><p>namespace中文意思：命名空间，作用如下：</p></li><li><ul><li>namespace的命名必须跟某个接口同名</li><li>接口中的方法与映射文件中sql语句id应该一一对应</li></ul></li><li><ol><li><p>namespace和子元素的id联合保证唯一  , 区别不同的mapper</p></li><li><p>绑定DAO接口</p></li><li><p>namespace命名规则 : 包名+类名</p></li></ol></li></ul><h2 id="4-Properties优化"><a href="#4-Properties优化" class="headerlink" title="4.Properties优化"></a>4.Properties优化</h2><p>数据库这些属性都是可外部配置且可动态替换的，既可以在典型的 Java 属性文件中配置，亦可通过 properties 元素的子元素来传递。具体的官方文档</p><p><strong>优化配置文件</strong></p><p>第一步 ; 在资源目录下新建一个db.properties</p><pre class=" language-properties"><code class="language-properties"><span class="token attr-name">driver</span><span class="token punctuation">=</span><span class="token attr-value">com.mysql.jdbc.Driver</span><span class="token attr-name">url</span><span class="token punctuation">=</span><span class="token attr-value">jdbc:mysql://localhost:3306/mybatis?useSSL=true&amp;useUnicode=true&amp;characterEncoding=utf8</span><span class="token attr-name">username</span><span class="token punctuation">=</span><span class="token attr-value">root</span><span class="token attr-name">password</span><span class="token punctuation">=</span><span class="token attr-value">123456</span></code></pre><p>第二步 : 将文件导入properties 配置文件</p><pre class=" language-xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>configuration</span><span class="token punctuation">></span></span>   <span class="token comment" spellcheck="true">&lt;!--导入properties文件--></span>   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>properties</span> <span class="token attr-name">resource</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>db.properties<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>environments</span> <span class="token attr-name">default</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>development<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>       <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>environment</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>development<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>           <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>transactionManager</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>JDBC<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>           <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dataSource</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>POOLED<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>               <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>driver<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>${driver}<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>               <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>url<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>${url}<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>               <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>username<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>${username}<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>               <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>password<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>${password}<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>           <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dataSource</span><span class="token punctuation">></span></span>       <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>environment</span><span class="token punctuation">></span></span>   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>environments</span><span class="token punctuation">></span></span>   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>mappers</span><span class="token punctuation">></span></span>       <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>mapper</span> <span class="token attr-name">resource</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>mapper/UserMapper.xml<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>mappers</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>configuration</span><span class="token punctuation">></span></span></code></pre><p>更多操作，可以查看官方文档</p><ul><li>配置文件优先级问题</li><li>新特性：使用占位符</li></ul><h2 id="5-typeAliases优化"><a href="#5-typeAliases优化" class="headerlink" title="5.typeAliases优化"></a>5.typeAliases优化</h2><p>类型别名是为 Java 类型设置一个短的名字。它只和 XML 配置有关，存在的意义仅在于用来减少类完全限定名的冗余。</p><pre class=" language-xml"><code class="language-xml"><span class="token comment" spellcheck="true">&lt;!--配置别名,注意顺序--></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>typeAliases</span><span class="token punctuation">></span></span>   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>typeAlias</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>com.kuang.pojo.User<span class="token punctuation">"</span></span> <span class="token attr-name">alias</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>User<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>typeAliases</span><span class="token punctuation">></span></span></code></pre><p>当这样配置时，<code>User</code>可以用在任何使用<code>com.kuang.pojo.User</code>的地方。</p><p>也可以指定一个包名，MyBatis 会在包名下面搜索需要的 Java Bean，比如:</p><pre class=" language-xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>typeAliases</span><span class="token punctuation">></span></span>   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>package</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>com.kuang.pojo<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>typeAliases</span><span class="token punctuation">></span></span></code></pre><p>每一个在包 <code>com.kuang.pojo</code> 中的 Java Bean，在没有注解的情况下，会使用 Bean 的首字母小写的非限定类名来作为它的别名。</p><p>若有注解，则别名为其注解值。见下面的例子：</p><pre class=" language-java"><code class="language-java"><span class="token annotation punctuation">@Alias</span><span class="token punctuation">(</span><span class="token string">"user"</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">User</span> <span class="token punctuation">{</span>  <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">}</span></code></pre><p>可以去官网查看一下Mybatis默认的一些类型别名！</p><h2 id="6-其他配置浏览"><a href="#6-其他配置浏览" class="headerlink" title="6.其他配置浏览"></a>6.其他配置浏览</h2><h3 id="1-设置"><a href="#1-设置" class="headerlink" title="(1)设置"></a>(1)设置</h3><ul><li><p>设置（settings）相关 =&gt; 查看帮助文档</p></li><li><ul><li>懒加载</li><li>日志实现</li><li>缓存开启关闭</li></ul></li><li><p>一个配置完整的 settings 元素的示例如下：</p><pre class=" language-xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>settings</span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>setting</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>cacheEnabled<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>true<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>setting</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>lazyLoadingEnabled<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>true<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>setting</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>multipleResultSetsEnabled<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>true<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>setting</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>useColumnLabel<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>true<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>setting</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>useGeneratedKeys<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>false<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>setting</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>autoMappingBehavior<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>PARTIAL<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>setting</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>autoMappingUnknownColumnBehavior<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>WARNING<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>setting</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>defaultExecutorType<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>SIMPLE<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>setting</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>defaultStatementTimeout<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>25<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>setting</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>defaultFetchSize<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>100<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>setting</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>safeRowBoundsEnabled<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>false<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>setting</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>mapUnderscoreToCamelCase<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>false<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>setting</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>localCacheScope<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>SESSION<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>setting</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>jdbcTypeForNull<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>OTHER<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>setting</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>lazyLoadTriggerMethods<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>equals,clone,hashCode,toString<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>settings</span><span class="token punctuation">></span></span></code></pre></li></ul><h3 id="2-类型处理器"><a href="#2-类型处理器" class="headerlink" title="(2)类型处理器"></a>(2)类型处理器</h3><ul><li>无论是 MyBatis 在预处理语句（PreparedStatement）中设置一个参数时，还是从结果集中取出一个值时， 都会用类型处理器将获取的值以合适的方式转换成 Java 类型。</li><li>你可以重写类型处理器或创建你自己的类型处理器来处理不支持的或非标准的类型。【了解即可】</li></ul><h3 id="3-对象工厂"><a href="#3-对象工厂" class="headerlink" title="(3)对象工厂"></a>(3)对象工厂</h3><ul><li>MyBatis 每次创建结果对象的新实例时，它都会使用一个对象工厂（ObjectFactory）实例来完成。</li><li>默认的对象工厂需要做的仅仅是实例化目标类，要么通过默认构造方法，要么在参数映射存在的时候通过有参构造方法来实例化。</li><li>如果想覆盖对象工厂的默认行为，则可以通过创建自己的对象工厂来实现。【了解即可】</li></ul><h2 id="7-生命周期和作用域"><a href="#7-生命周期和作用域" class="headerlink" title="7.生命周期和作用域"></a>7.生命周期和作用域</h2><p><strong>作用域（Scope）和生命周期</strong></p><p>理解我们目前已经讨论过的不同作用域和生命周期类是至关重要的，因为错误的使用会导致非常严重的并发问题。</p><p><strong>作用域理解</strong></p><ul><li>SqlSessionFactoryBuilder 的作用在于创建 SqlSessionFactory，创建成功后，SqlSessionFactoryBuilder 就失去了作用，所以它只能存在于创建 SqlSessionFactory 的方法中，而不要让其长期存在。因此 <strong>SqlSessionFactoryBuilder 实例的最佳作用域是方法作用域</strong>（也就是局部方法变量）。</li><li>SqlSessionFactory 可以被认为是一个数据库连接池，它的作用是创建 SqlSession 接口对象。因为 MyBatis 的本质就是 Java 对数据库的操作，所以 SqlSessionFactory 的生命周期存在于整个 MyBatis 的应用之中，所以一旦创建了 SqlSessionFactory，就要长期保存它，直至不再使用 MyBatis 应用，所以可以认为 SqlSessionFactory 的生命周期就等同于 MyBatis 的应用周期。</li><li>由于 SqlSessionFactory 是一个对数据库的连接池，所以它占据着数据库的连接资源。如果创建多个 SqlSessionFactory，那么就存在多个数据库连接池，这样不利于对数据库资源的控制，也会导致数据库连接资源被消耗光，出现系统宕机等情况，所以尽量避免发生这样的情况。</li><li>因此在一般的应用中我们往往希望 SqlSessionFactory 作为一个单例，让它在应用中被共享。所以说 <strong>SqlSessionFactory 的最佳作用域是应用作用域。</strong></li><li>如果说 SqlSessionFactory 相当于数据库连接池，那么 SqlSession 就相当于一个数据库连接（Connection 对象），你可以在一个事务里面执行多条 SQL，然后通过它的 commit、rollback 等方法，提交或者回滚事务。所以它应该存活在一个业务请求中，处理完整个请求后，应该关闭这条连接，让它归还给 SqlSessionFactory，否则数据库资源就很快被耗费精光，系统就会瘫痪，所以用 try…catch…finally… 语句来保证其正确关闭。</li><li><strong>所以 SqlSession 的最佳的作用域是请求或方法作用域。</strong></li></ul><p>​                                                                                                             </p><h1 id="五、"><a href="#五、" class="headerlink" title="五、"></a>五、</h1><h2 id="1"><a href="#1" class="headerlink" title="1."></a>1.</h2>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>java学习笔记</title>
      <link href="2020/072565132.html"/>
      <url>2020/072565132.html</url>
      
        <content type="html"><![CDATA[<h1 id="Java核心技术简单笔记"><a href="#Java核心技术简单笔记" class="headerlink" title="Java核心技术简单笔记"></a>Java核心技术简单笔记</h1><h2 id="第一部分：-java基础编程"><a href="#第一部分：-java基础编程" class="headerlink" title="第一部分： java基础编程"></a>第一部分： java基础编程</h2><h3 id="第一章-Java语言概述"><a href="#第一章-Java语言概述" class="headerlink" title="第一章  Java语言概述"></a>第一章  Java语言概述</h3><h5 id="常用的DOS命令"><a href="#常用的DOS命令" class="headerlink" title="常用的DOS命令"></a>常用的DOS命令</h5><p>dir：列出当前目录下的文件以及文件夹</p><p>md：创建目录</p><p>rd：删除目录</p><p>cd：进入指定目录</p><p>cd..：退回到上一级目录</p><p>cd\：退回到根目录</p><p>del：删除文件（del *.扩展名  可以删除所有扩展名相同的文件）</p><p>exit：退出dos命令行</p><h5 id="java语言的主要特点"><a href="#java语言的主要特点" class="headerlink" title="java语言的主要特点"></a>java语言的主要特点</h5><p>面向对象</p><p>健壮性</p><p>跨平台性</p><h5 id="java的几大版本"><a href="#java的几大版本" class="headerlink" title="java的几大版本"></a>java的几大版本</h5><p>javaSE(J2SE)</p><p>javaEE(J2EE)</p><p>javaME(J2ME)</p><h5 id="java两种核心机制"><a href="#java两种核心机制" class="headerlink" title="java两种核心机制"></a>java两种核心机制</h5><p>java虚拟机(java virtal machine)</p><p>垃圾收集机制（Garbage Collection）</p><h6 id="注：java程序还会出现内存泄露和内存溢出的问题吗？-答：yes"><a href="#注：java程序还会出现内存泄露和内存溢出的问题吗？-答：yes" class="headerlink" title="注：java程序还会出现内存泄露和内存溢出的问题吗？ 答：yes"></a>注：java程序还会出现内存泄露和内存溢出的问题吗？ 答：yes</h6><h5 id="JDK、JRE、JVM的关系"><a href="#JDK、JRE、JVM的关系" class="headerlink" title="JDK、JRE、JVM的关系"></a>JDK、JRE、JVM的关系</h5><p>JDK = JRE + 开发工具集（例如javac编译工具）</p><p>JRE = JVM + javaSE标准类库</p><h5 id="java语言的环境搭建"><a href="#java语言的环境搭建" class="headerlink" title="java语言的环境搭建"></a>java语言的环境搭建</h5><p>path环境变量：windows系统执行命令时要搜索的路径。</p><p>环境变量配置(win10)：新增变量：JAVA_HOME    值：jdk路径</p><p>​                            path：%JAVA_HOME%\bin;</p><p>​                                        %JAVA_HOME%\jre\bin;</p><p>​                            变量名CLASSPATH 变量值.;%JAVA_HOME%\lib;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar    </p><h5 id="java简单的编译运行"><a href="#java简单的编译运行" class="headerlink" title="java简单的编译运行"></a>java简单的编译运行</h5><h6 id="使用dos命令行"><a href="#使用dos命令行" class="headerlink" title="使用dos命令行"></a>使用dos命令行</h6><p>编译：javac *.java    </p><p>运行：java *    (不要加扩展名.class)</p><h5 id="java文档注释"><a href="#java文档注释" class="headerlink" title="java文档注释"></a>java文档注释</h5><p>格式：/**</p><p>​            @author 指定java程序的作者</p><p>​            @version 指定源文件的版本</p><p>​            */</p><p>作用：注释内容可以被JDK提供的工具javadoc所解析，生成一套以网页文件形式体现该程序的说明文档。</p><p>操作方式：路径&gt;javadoc -d 新建文件夹名称 -author -version 需要解析文件的文件名称</p><p>如：d:\java\code &gt;avadoc -d HelloWorld -author -version HelloWorld.java</p><p>则由HelloWorld.java文件生成一个HelloWorld的文件夹，里面存储很多网页文件等。</p><h5 id="API文档（Application-Programming-Interface-应用程序编程接口）"><a href="#API文档（Application-Programming-Interface-应用程序编程接口）" class="headerlink" title="API文档（Application Programming Interface,应用程序编程接口）"></a>API文档（Application Programming Interface,应用程序编程接口）</h5><p>下载API：<a href="http://www.oracle.com/technetwork/java/javase/downloads/index.html" target="_blank" rel="noopener">http://www.oracle.com/technetwork/java/javase/downloads/index.html</a></p><h3 id="第二章-基本语法"><a href="#第二章-基本语法" class="headerlink" title="第二章 基本语法"></a>第二章 基本语法</h3><h3 id="第三章-数组"><a href="#第三章-数组" class="headerlink" title="第三章 数组"></a>第三章 数组</h3><h5 id="一、eclipse的透视图"><a href="#一、eclipse的透视图" class="headerlink" title="一、eclipse的透视图"></a>一、eclipse的透视图</h5><p>透视图：建议使用javaEE</p><p>Navigator：导航</p><p>Pakeage Explorer:包浏览器</p><p>Console:控制台</p><p>Outline(大纲)习惯放在左侧导航栏，左侧自带的Project Explorer（项目浏览器）通常用不着，所以去掉，右侧Task Lisk（任务列表）通常也用不着，所以也去掉。</p><p>更改编码：UTF-8</p><p>思考问题：为什么要改成utf-8呢？？？</p><p>字体大小的更改</p><p>保存透视图，可以快速重置透视图的界面。</p><h5 id="二、快捷方式"><a href="#二、快捷方式" class="headerlink" title="二、快捷方式"></a>二、快捷方式</h5><p>输入main，按alt+/直接输出完整的主函数格式。public static void main(String[] args){}</p><p>输入syso,按alt+/直接输出System.out.println();</p><p>输入/**，回车，显示完整的文档注释。</p><ul><li>1.补全代码的声明：alt + /</li><li>2.快速修复: ctrl + 1</li><li>3.批量导包：ctrl + shift + o</li><li>4.使用单行注释：ctrl + /</li><li>5.使用多行注释： ctrl + shift + /</li><li>6.取消多行注释：ctrl + shift + \</li><li>7.复制指定行的代码：ctrl + alt + down 或 ctrl + alt + up</li><li>8.删除指定行的代码：ctrl + d</li><li>9.上下移动代码：alt + up 或 alt + down</li><li>10.切换到下一行代码空位：shift + enter</li><li>11.切换到上一行代码空位：ctrl + shift + enter</li><li>12.如何查看源码：ctrl + 选中指定的结构 或 ctrl + shift + t</li><li>13.退回到前一个编辑的页面：alt + left</li><li>14.进入到下一个编辑的页面(针对于上面那条来说的)：alt + right</li><li>15.光标选中指定的类，查看继承树结构：ctrl + t</li><li>16.复制代码： ctrl + c</li><li>17.撤销： ctrl + z</li><li>18.反撤销： ctrl + y</li><li>19.剪切：ctrl + x</li><li>20.粘贴：ctrl + v</li><li>21.保存： ctrl + s</li><li>22.全选：ctrl + a</li><li>23.格式化代码： ctrl + shift + f</li><li>24.选中数行，整体往后移动：tab</li><li>25.选中数行，整体往前移动：shift + tab</li><li>26.在当前类中，显示类结构，并支持搜索指定的方法、属性等：ctrl + o</li><li>27.批量修改指定的变量名、方法名、类名等：alt + shift + r</li><li>28.选中的结构的大小写的切换：变成大写： ctrl + shift + x</li><li>29.选中的结构的大小写的切换：变成小写：ctrl + shift + y</li><li>30.调出生成 getter/setter/构造器等结构： alt + shift + s</li><li>31.显示当前选择资源(工程 or 文件)的属性：alt + enter</li><li>32.快速查找：参照选中的 Word 快速定位到下一个 ：ctrl + k</li><li></li><li>33.关闭当前窗口：ctrl + w</li><li>34.关闭所有的窗口：ctrl + shift + w</li><li>35.查看指定的结构使用过的地方：ctrl + alt + g</li><li>36.查找与替换：ctrl + f</li><li>37.最大化当前的 View：ctrl + m</li><li>38.直接定位到当前行的首位：home</li><li>39.直接定位到当前行的末位：end</li></ul>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>HTML5基础知识笔记</title>
      <link href="2020/06142752.html"/>
      <url>2020/06142752.html</url>
      
        <content type="html"><![CDATA[<h1 id="HTML5基础知识笔记"><a href="#HTML5基础知识笔记" class="headerlink" title="HTML5基础知识笔记"></a>HTML5基础知识笔记</h1><h6 id="注：1-个人记录的笔记，不是什么技术"><a href="#注：1-个人记录的笔记，不是什么技术" class="headerlink" title="注：1.个人记录的笔记，不是什么技术"></a>注：1.个人记录的笔记，不是什么技术</h6><h6 id="2-笔记不是非常详细"><a href="#2-笔记不是非常详细" class="headerlink" title="2.笔记不是非常详细"></a>2.笔记不是非常详细</h6><h3 id="一、HTML基础"><a href="#一、HTML基础" class="headerlink" title="一、HTML基础"></a>一、HTML基础</h3><p>Web前段开发工程师应该掌握以下内容：</p><ul><li>掌握HTML文档的基本结构</li><li>理解标签类型，标签语法</li><li>学会body标签属性的设置方法</li><li>学会给网页添加注释</li><li>理解元信息meta标签的作用</li></ul><p>HTML文档由头部head和主体body两个部分组成。</p><h5 id="1-head标签"><a href="#1-head标签" class="headerlink" title="1.head标签"></a>1.head标签</h5><p>包含页面标题标签、元信息标签、样式标签、脚本标签、链接标签。</p><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>标题<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span><span class="token punctuation">></span></span>  <span class="token comment" spellcheck="true">&lt;!--name属性          值：uthor(定义网页作者)                         description(定义网页简短描述)                          keywords(定义网页关键字)                          generator(定义编辑器)    http-equiv属性    值： content-type(内容类型)                         expires(网页缓存过期时间)                         refresh(刷新与跳转（重定向）页面)                         set-cookie(如果网页过期，那么存盘的cookie将被删除)    content             值：some_text(定义与http-equiv或name属性相关的元信息)--></span></code></pre><h5 id="2-body标签"><a href="#2-body标签" class="headerlink" title="2.body标签"></a>2.body标签</h5><p>包含网页中的所有内容，如图片、图像、表格、文字、超链接等元素。</p><p>body标签的属性：topmargin、leftmargin、text、bgcolor、background、link、alink、vlink。</p><p>基本语法：</p><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span> <span class="token attr-name">leftmargin</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>50px<span class="token punctuation">"</span></span> <span class="token attr-name">topmargin</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>50px<span class="token punctuation">"</span></span> <span class="token attr-name">text</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>#000000<span class="token punctuation">"</span></span> <span class="token attr-name">bgcolor</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>#339999<span class="token punctuation">"</span></span> <span class="token attr-name">link</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>blue<span class="token punctuation">"</span></span> <span class="token attr-name">alink</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>white<span class="token punctuation">"</span></span> <span class="token attr-name">vlink</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>red<span class="token punctuation">"</span></span> <span class="token attr-name">background</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>body_image.jpg<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    内容<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span></code></pre><p>topmargin:规定文档中上边距的大小;</p><p>leftmargin:规定文档中左边距的大小;</p><p>text:网页中文字的颜色;</p><p>bgcolor:规定文档的背景颜色;</p><p>background:规定文档的背景图像;</p><p>link:规定文档中未访问链接的默认颜色;</p><p>alink:规定文档中活动链接的颜色;</p><p>vlink:规定文档中访问后链接的颜色。</p><h5 id="3-标记类型"><a href="#3-标记类型" class="headerlink" title="3.标记类型"></a>3.标记类型</h5><p>单标签，双标签。</p><p>属性格式：</p><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>标记名称</span> <span class="token attr-name">属性名1</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>属性值1<span class="token punctuation">"</span></span> <span class="token attr-name">属性名2</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>属性值2<span class="token punctuation">"</span></span> <span class="token attr-name">...</span> <span class="token attr-name">属性值n</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>属性值n<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>标记名称</span><span class="token punctuation">></span></span></code></pre><h5 id="4-注释"><a href="#4-注释" class="headerlink" title="4.注释"></a>4.注释</h5><!--注释内容--><p><comment>注释内容</comment></p><h3 id="二、格式化文本与段落"><a href="#二、格式化文本与段落" class="headerlink" title="二、格式化文本与段落"></a>二、格式化文本与段落</h3><p>Web前段开发工程师应该掌握以下的内容：</p><ul><li>掌握标题字（h1~h6）标签语法以及属性语法</li><li>理解文本格式化标签类型与作用，并学会使用各种样式</li><li>学会使用字体font标签</li><li>学会使用段落与排版标签</li><li>学会使用各类格式化标签设计简易的web页面</li></ul><h5 id="1-向web页面添加文字信息"><a href="#1-向web页面添加文字信息" class="headerlink" title="1.向web页面添加文字信息"></a>1.向web页面添加文字信息</h5><p>基本语法：</p><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    向这里添加内容<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span></code></pre><p>语法说明：</p><p>body标签定义文档的主体。</p><h5 id="2-标题字标签"><a href="#2-标题字标签" class="headerlink" title="2.标题字标签"></a>2.标题字标签</h5><p>基本语法：</p><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span> <span class="token attr-name">align</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>left|center|right|justify<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>1号标题文字<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h2</span> <span class="token attr-name">align</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>left|center|right|justify<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>2号标题文字<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h2</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h3</span> <span class="token attr-name">align</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>left|center|right|justify<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>3号标题文字<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h3</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h4</span> <span class="token attr-name">align</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>left|center|right|justify<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>4号标题文字<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h4</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h5</span> <span class="token attr-name">align</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>left|center|right|justify<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>5号标题文字<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h5</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h6</span> <span class="token attr-name">align</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>left|center|right|justify<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>6号标题文字<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h6</span><span class="token punctuation">></span></span></code></pre><p>语法说明：</p><p>h后面数字越小标题字越大。</p><h5 id="3-添加空格与特殊字符"><a href="#3-添加空格与特殊字符" class="headerlink" title="3.添加空格与特殊字符"></a>3.添加空格与特殊字符</h5><p>基本语法：</p><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token entity" title="&nbsp;">&amp;nbsp;</span>    <span class="token entity" title="&lt;">&amp;lt;</span>    <span class="token entity" title="&reg;">&amp;reg;</span>    <span class="token entity" title="&times;">&amp;times;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span></code></pre><p>语法说明：</p><pre class=" language-html"><code class="language-html">空格        &amp;nbsp&lt;         &amp;lt>         &amp;gt&amp;        &amp;amp"        &amp;quot版权        &amp;copy注册商标   &amp;reg乘号        &amp;times除号        &amp;divide</code></pre><h5 id="4-文本修饰标签"><a href="#4-文本修饰标签" class="headerlink" title="4.文本修饰标签"></a>4.文本修饰标签</h5><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>b</span><span class="token punctuation">></span></span>定义粗体/b> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>i</span><span class="token punctuation">></span></span>定义斜体<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>i</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>u</span><span class="token punctuation">></span></span>定义下划线<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>u</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>del</span><span class="token punctuation">></span></span>定义删除线<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>del</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>sup</span><span class="token punctuation">></span></span>定义上标<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>sup</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>sub</span><span class="token punctuation">></span></span>定义下标<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>sub</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>strong</span><span class="token punctuation">></span></span>定义着重文字，与<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>b</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>b</span><span class="token punctuation">></span></span>效果相同<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>strong</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>em</span><span class="token punctuation">></span></span>定义加重语气，与<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>i</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>i</span><span class="token punctuation">></span></span>效果相同<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>em</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>small</span><span class="token punctuation">></span></span>变小字号<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>small</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>big</span><span class="token punctuation">></span></span>变大字号<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>big</span><span class="token punctuation">></span></span></code></pre><h5 id="5-字体font标签"><a href="#5-字体font标签" class="headerlink" title="5.字体font标签"></a>5.字体font标签</h5><p>基本语法：</p><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>font</span> <span class="token attr-name">face</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span> <span class="token attr-name">size</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span> <span class="token attr-name">color</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>...<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>font</span><span class="token punctuation">></span></span></code></pre><p>size:取值+1<del>+7,1</del>7,-1~-7</p><p>color:rgb(r,g,b),#rrggbb,#rgb,colorname</p><p>face:字体1，字体2，… ，字体n</p><h5 id="6-段落p标签"><a href="#6-段落p标签" class="headerlink" title="6.段落p标签"></a>6.段落p标签</h5><p>基本语法：</p><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">align</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>left|center|right|justify<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>段落正文内容<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span></code></pre><h5 id="7-换行标签"><a href="#7-换行标签" class="headerlink" title="7.换行标签"></a>7.换行标签</h5><p>基本语法：</p><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">></span></span>或<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">/></span></span></code></pre><h5 id="8-水平分割线标签"><a href="#8-水平分割线标签" class="headerlink" title="8.水平分割线标签"></a>8.水平分割线标签</h5><p>基本语法：</p><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>hr</span> <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span> <span class="token attr-name">size</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span> <span class="token attr-name">color</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span> <span class="token attr-name">align</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span> <span class="token attr-name">noshade</span><span class="token punctuation">></span></span></code></pre><p>width:像素(px)或百分比,设置水平线宽度</p><p>size:整数，单位px，设置水平线高度</p><p>color:rgb函数、十六进制数、颜色英文名</p><p>align:left|right|center</p><h5 id="9-预格式标签"><a href="#9-预格式标签" class="headerlink" title="9.预格式标签"></a>9.预格式标签</h5><p>基本语法：</p><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>pre</span><span class="token punctuation">></span></span>预格式化文本<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>pre</span><span class="token punctuation">></span></span></code></pre><p>作用：浏览器会完整保留设计者在源文件中所定义的格式，包括各种空格、缩进以及其他特殊格式。</p><h3 id="三、列表"><a href="#三、列表" class="headerlink" title="三、列表"></a>三、列表</h3><p>分类：无序列表，有序列表，菜单列表（不常用），目录列表（不常用），定义列表。</p><h5 id="1-无序列表"><a href="#1-无序列表" class="headerlink" title="1.无序列表"></a>1.无序列表</h5><p>基本语法：</p><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>项目名称<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>项目名称<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>    ...<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">></span></span></code></pre><p>标记说明：</p><p>type属性值   disc(实心圆形)、circle(空心圆形)、square(实心正方形)。</p><h5 id="2-有序列表"><a href="#2-有序列表" class="headerlink" title="2.有序列表"></a>2.有序列表</h5><p>基本语法：</p><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ol</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span> <span class="token attr-name">start</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>n<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>n<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>    ...<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ol</span><span class="token punctuation">></span></span></code></pre>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>网站推荐</title>
      <link href="2020/061442075.html"/>
      <url>2020/061442075.html</url>
      
        <content type="html"><![CDATA[<p><a href="https://link.zhihu.com/?target=https%3A//www.iconfinder.com/">https://link.zhihu.com/?target=https%3A//www.iconfinder.com/</a></p><h3 id="MySQL安装包快速下载"><a href="#MySQL安装包快速下载" class="headerlink" title="MySQL安装包快速下载"></a>MySQL安装包快速下载</h3><p>版本8+  安装程序</p><p><a href="https://b53a672169e4001c4cc776e71005392e.dd.cdntips.com/dl.softmgr.qq.com/original/Development/mysql-installer-community-8.0.19.0.msi?mkey=5e9e71583af78d50&amp;f=0c27&amp;cip=58.247.171.165&amp;proto=https[/code]" target="_blank" rel="noopener">https://b53a672169e4001c4cc776e71005392e.dd.cdntips.com/dl.softmgr.qq.com/original/Development/mysql-installer-community-8.0.19.0.msi?mkey=5e9e71583af78d50&amp;f=0c27&amp;cip=58.247.171.165&amp;proto=https[/code]</a></p><p>版本5+   安装包</p><p><a href="https://dev.mysql.com/downloads/mysql/" target="_blank" rel="noopener">https://dev.mysql.com/downloads/mysql/</a></p><p>所有版本</p><p><a href="https://downloads.mysql.com/archives/installer/" target="_blank" rel="noopener">https://downloads.mysql.com/archives/installer/</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>创建个人博客网站（hexo）</title>
      <link href="2020/061128961.html"/>
      <url>2020/061128961.html</url>
      
        <content type="html"><![CDATA[<h1 id="创建个人博客网站简介-hexo"><a href="#创建个人博客网站简介-hexo" class="headerlink" title="创建个人博客网站简介(hexo)"></a>创建个人博客网站简介(hexo)</h1><h6 id="注："><a href="#注：" class="headerlink" title="注："></a>注：</h6><ul><li>教程并不详细，只介绍主要步骤，请慎重浏览</li><li>只用于windows系统，其他系统并未测试</li></ul><h2 id="必备软件（自行下载安装即可）"><a href="#必备软件（自行下载安装即可）" class="headerlink" title="必备软件（自行下载安装即可）"></a>必备软件（自行下载安装即可）</h2><p>node     官网链接：<a href="https://nodejs.org/zh-cn/" target="_blank" rel="noopener">https://nodejs.org/zh-cn/</a> </p><p>Git          链接：<a href="https://npm.taobao.org/mirrors/git-for-windows/v2.27.0.windows.1/" target="_blank" rel="noopener">https://npm.taobao.org/mirrors/git-for-windows/v2.27.0.windows.1/</a></p><h2 id="配置Git"><a href="#配置Git" class="headerlink" title="配置Git"></a>配置Git</h2><ol><li><p>在安装好的Git目录下，打开Git-cmd.exe。输入命令git config –global user.email “你的邮箱”,回车，输入第二条命令 git config –global user.name “你的用户名”，回车。作用就是在Git上设置你的邮箱和用户名。这个邮箱和用户名是你的GitHub账户的邮箱和用户名，没有的话需要去GitHub注册一个账号，这里不多介绍。</p></li><li><p>打开Git目录下的另一个程序，Git-bash.exe。输入命令ssh-keygen -t rsa -C “<a href="mailto:your_email@example.com">your_email@example.com</a>“。这条命令交给你提供的账号提供一条密钥。密钥的路径一般在你系统盘用户目录中.ssh文件中。此时登录你的GitHub账号，你的主页右上角图像点击下拉列表中的Settings，然后选择SSH and GPG keys,选择第一个新建SSH密钥，标题任意，把系统盘产生的那个密钥文件id_rsa.pub用记事本打开，复制，粘贴到新建SSH密钥框中，保存即可。</p></li></ol><h2 id="安装hexo"><a href="#安装hexo" class="headerlink" title="安装hexo"></a>安装hexo</h2><ul><li><p>win+R，打开运行窗口，输入命令cmd，回车。</p></li><li><p>可以先检测一下自己的node和npm版本，查看是否已经安装好。<br>命令：node -v</p><pre><code>        npm -v</code></pre></li><li><p>安装淘宝的cnpm管理器<br>命令：npm install -g cnpm -registry=<a href="http://registry.npm.taobao.org" target="_blank" rel="noopener">http://registry.npm.taobao.org</a></p></li><li><p>安装好后，可以查看一下版本，检测是否安装成功<br>命令：cnpm -v</p></li><li><p>创建blog文件夹<br>命令：mkdir blog<br>默认是建在系统盘用户目录里面，可以自己更改路径，例如mkdir E:\blog</p></li><li><p>在创建好后，直接进入blog文件夹<br>命令：cd blog<br>打开时请注意盘符，否则找不到文件，盘符可以自己选择，或者返回上一级下一级设置，这里不多介绍。</p></li><li><p>生成博客，初始化博客<br>命令：hexo init</p></li><li><p>启动本地博客服务<br>命令：hexo s<br>可以使用<a href="http://localhost:4000/访问自己建好的博客" target="_blank" rel="noopener">http://localhost:4000/访问自己建好的博客</a></p></li><li><p>Github创建一个新的仓库，仓库名称需要跟你的GitHub账号用户名一样。样式：YourGithubName.github.io</p></li><li><p>在blog目录下安装Git部署插件<br>命令：cnpm install -save hexo-deployer-git</p></li><li><p>在文件夹里找到你建立的blog文件夹，用记事本方式打开_config.yml配置文件。<br>文件内容的最后，修改：type： git<br>并添加新的内容：<br>rope:<br>rope后填写你创新的新仓库的地址，可以去GitHub查看。<br>branch：master<br><strong>注：冒号后面都有一个空格，因为冒号</strong></p></li><li><p>部署到仓库里<br>命令：hexo d</p></li><li><p>部署好后，就能用你的域名来访问博客了。样式：<a href="https://YourGithubName.github.io" target="_blank" rel="noopener">https://YourGithubName.github.io</a></p></li><li><p>可以下载yilia主题到本地<br>命令：git clone <a href="http://github.com/litten/hexo-theme-yilia.git" target="_blank" rel="noopener">http://github.com/litten/hexo-theme-yilia.git</a> themes/yilia</p></li><li><p>修改hexo文件目录下的_config.yml文件<br>修改内容：<br>theme：  冒号后面的内容修改成yilia<br><strong>注：修改主题随自己选择，并非与其一样</strong></p></li><li><p>清理一下<br>命令：hexo c</p></li><li><p>生成<br>命令：hexo g</p></li><li><p>部署到你的仓库<br>命令：hexo d</p></li><li><p>最后就可以使用你的域名查看全新的个人博客网站了。样式：<a href="https://YourGithubName.github.io" target="_blank" rel="noopener">https://YourGithubName.github.io</a></p><p><strong>赶紧快把做好的个人博客网站分享跟你的小伙伴吧</strong></p></li></ul><p>​       博主是第一次写博客。这是建立好个人博客网站后分享的一点心得，也是记下的一部分笔记，不足之处还望各位小伙伴谅解，也请指出我的不足。</p><p>​       关于更多的详细内容也可以参考hexo网站，里面有更详细的教程讲解，还有更多精美的主题等待你的体验。在这里我分享一下官方网址<a href="https://hexo.io/zh-cn/" target="_blank" rel="noopener">https://hexo.io/zh-cn/</a></p><p>​        关于其他各种功能用法就不多详细介绍了，这里只介绍如何搭建个人博客网站，还请各位小伙伴谅解，加油吧！</p><p>​        <strong>并不是打广告,你懂的！</strong></p><p>博主个人QQ：2789492959</p><p>不懂的小伙伴可以加我私信哦！</p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
